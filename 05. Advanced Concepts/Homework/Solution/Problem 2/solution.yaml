apiVersion: v1
kind: Pod
metadata:
  name: pod1
  labels:
    app: pod1
spec:
  containers:
  - image: shekeriev/k8s-environ
    name: main
    env:
    - name: TOPOLOGY
      value: "POD1 -> SERVICE1"
    - name: FOCUSON
      value: "TOPOLOGY"
---
apiVersion: v1
kind: Service
metadata:
  name: service1
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: pod1  
---
apiVersion: v1
kind: Pod
metadata:
  name: pod2
  labels:
    app: pod2
spec:
  containers:
  - image: shekeriev/k8s-environ
    name: main
    env:
    - name: TOPOLOGY
      value: "POD2 -> SERVICE2"
    - name: FOCUSON
      value: "TOPOLOGY"
---
apiVersion: v1
kind: Service
metadata:
  name: service2
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: pod2
---
apiVersion: v1
kind: Pod
metadata:
  name: podd
  labels:
    app: podd
spec:
  containers:
  - image: shekeriev/k8s-environ
    name: main
    env:
    - name: TOPOLOGY
      value: "PODd -> SERVICEd (default backend)"
    - name: FOCUSON
      value: "TOPOLOGY"

---
apiVersion: v1
kind: Service
metadata:
  name: serviced
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: podd
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-ctrl
  annotations:
    nginx.org/rewrites: "serviceName=service1 rewrite=/;serviceName=service2 rewrite=/"
spec:
  tls:
  - hosts:
    - demo.lab
    secretName: demo-lab-secret
  ingressClassName: nginx
  defaultBackend:
    service:
      name: serviced
      port:
        number: 443
  rules:
  - host: demo.lab
    http:
      paths:
      - path: /service1
        pathType: Prefix
        backend:
          service:
            name: service1
            port:
              number: 443
      - path: /service2
        pathType: Prefix
        backend:
          service:
            name: service2
            port:
              number: 443

